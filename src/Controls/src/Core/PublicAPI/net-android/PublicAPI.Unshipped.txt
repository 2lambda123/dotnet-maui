#nullable enable
Microsoft.Maui.Controls.FlyoutBase
Microsoft.Maui.Controls.FlyoutBase.FlyoutBase() -> void
Microsoft.Maui.Controls.MenuFlyout
Microsoft.Maui.Controls.MenuFlyout.Clear() -> void
Microsoft.Maui.Controls.MenuFlyout.MenuFlyout() -> void
Microsoft.Maui.Controls.MenuFlyout.Count.get -> int
Microsoft.Maui.Controls.MenuFlyout.IsReadOnly.get -> bool
Microsoft.Maui.Controls.MenuFlyout.RemoveAt(int index) -> void
Microsoft.Maui.Controls.MenuFlyoutSeparator
Microsoft.Maui.Controls.MenuFlyoutSeparator.MenuFlyoutSeparator() -> void
override Microsoft.Maui.Controls.ContentPresenter.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.ContentPresenter.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.FlyoutPage.OnDisappearing() -> void
override Microsoft.Maui.Controls.Grid.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.HeaderContainer.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Platform.ControlsAccessibilityDelegate.OnInitializeAccessibilityNodeInfo(Android.Views.View! host, AndroidX.Core.View.Accessibility.AccessibilityNodeInfoCompat! info) -> void
override Microsoft.Maui.Controls.TemplatedView.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.TemplatedView.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
~Microsoft.Maui.Controls.MenuFlyout.Add(Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuFlyout.Contains(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuFlyout.CopyTo(Microsoft.Maui.IMenuElement[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.MenuFlyout.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.IMenuElement>
~Microsoft.Maui.Controls.MenuFlyout.IndexOf(Microsoft.Maui.IMenuElement item) -> int
~Microsoft.Maui.Controls.MenuFlyout.Insert(int index, Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuFlyout.Remove(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuFlyout.this[int index].get -> Microsoft.Maui.IMenuElement
~Microsoft.Maui.Controls.MenuFlyout.this[int index].set -> void
~Microsoft.Maui.Controls.View.ContextFlyout.get -> Microsoft.Maui.Controls.FlyoutBase
~Microsoft.Maui.Controls.View.ContextFlyout.set -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.ViewCellRenderer.DisconnectHandler(Android.Views.View platformView) -> void
*REMOVED*override Microsoft.Maui.Controls.ContentView.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
*REMOVED*override Microsoft.Maui.Controls.ContentView.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
*REMOVED*override Microsoft.Maui.Controls.RadioButton.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
*REMOVED*override Microsoft.Maui.Controls.RadioButton.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
*REMOVED*override Microsoft.Maui.Controls.FlexLayout.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
static readonly Microsoft.Maui.Controls.VisualElement.ZIndexProperty -> Microsoft.Maui.Controls.BindableProperty!
*REMOVED*override Microsoft.Maui.Controls.Platform.ControlsAccessibilityDelegate.OnInitializeAccessibilityNodeInfo(Android.Views.View? host, AndroidX.Core.View.Accessibility.AccessibilityNodeInfoCompat? info) -> void
~static readonly Microsoft.Maui.Controls.View.ContextFlyoutProperty -> Microsoft.Maui.Controls.BindableProperty
