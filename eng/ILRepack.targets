<Project>

	<ItemGroup>
		<PackageReference Include="ILRepack" Version="2.0.18" PrivateAssets="all" />
	</ItemGroup>

	<Target Name="_ILRepackDependencies">

		<PropertyGroup>
			<ILRepackPrimaryAssembly Condition="'$(ILRepackPrimaryAssembly)' == ''">$(IntermediateOutputPath)$(AssemblyName).dll</ILRepackPrimaryAssembly>
			<ILRepackOutputAssembly Condition="'$(ILRepackOutputAssembly)' == ''">$(ILRepackPrimaryAssembly)</ILRepackOutputAssembly>
		</PropertyGroup>

	</Target>

	<Target Name="_ILRepackProperties">
	
		<PropertyGroup>
			<!-- NOTE: Strong naming is only supported by the .NET Full Framework and/or on Windows -->
			<_ILRepackPerformRepack Condition="'$(OS)' == 'Windows_NT'">true</_ILRepackPerformRepack>
		</PropertyGroup>

		<ItemGroup>
			<_ILRepackPrimaryAssembly Include="$(ILRepackPrimaryAssembly)" />
			<_ILRepackInputAssemblies Include="@(ILRepackInputAssemblies)" />
			<_ILRepackOutputAssembly Include="$(ILRepackOutputAssembly)" />
		</ItemGroup>

		<ItemGroup>
			<_ILRepackAllAssemblies Include="@(_ILRepackPrimaryAssembly->'%(RootDir)%(Directory)%(Filename)%(Extension)')" />
			<_ILRepackAllAssemblies Include="@(_ILRepackInputAssemblies->'%(RootDir)%(Directory)%(Filename)%(Extension)')" />
			<_ILRepackOutputAssemblyPdb Include="@(_ILRepackOutputAssembly->'%(RootDir)%(Directory)%(Filename).pdb')" />
			<_ILRepackOutputAssemblyPath Include="@(_ILRepackOutputAssembly->'%(RootDir)%(Directory)')" />
			<_NetstandardPath Include="@(ReferencePath->'%(RootDir)%(Directory)')" Condition="'%(FileName)%(Extension)' == 'netstandard.dll'" />
		</ItemGroup>
		<PropertyGroup>
			<_ILRepackOutputAssemblyDir>@(_ILRepackOutputAssemblyPath)</_ILRepackOutputAssemblyDir>
			<_NetstandardDir>@(_NetstandardPath)</_NetstandardDir>
		</PropertyGroup>

		<PropertyGroup>
			<_ILRepackCommonArgs>/ver:$(FileVersion) /internalize /keyfile:"$(StrongNamerKeyFile)" /lib:"$(_NetstandardDir.TrimEnd('\'))"</_ILRepackCommonArgs>
		</PropertyGroup>

		<CreateItem Include="@(_ILRepackAllAssemblies->'%(RootDir)%(Directory)*\%(Filename).resources.dll')">
			<Output TaskParameter="Include" ItemName="_ILRepackSatellite" />
		</CreateItem>
		<ItemGroup>
			<_ILRepackSatelliteLanguage Include="@(_ILRepackSatellite->Distinct())" />
			<_ILRepackAllSatellites Include="@(_ILRepackSatellite)" />
		</ItemGroup>

	</Target>

	<Target
		Name="_ILRepackSatelliteAssemblies"
		Outputs="%(_ILRepackSatelliteLanguage.Identity)"
		DependsOnTargets="_ILRepackProperties">

		<PropertyGroup>
			<_ILRepackLanguage>%(_ILRepackSatelliteLanguage.RecursiveDir)</_ILRepackLanguage>
			<_ILRepackLanguageOutput>@(_ILRepackOutputAssembly->'%(RootDir)%(Directory)$(_ILRepackLanguage)%(Filename).resources.dll')</_ILRepackLanguageOutput>
			<_ILRepackLanguageOutputDir>@(_ILRepackOutputAssembly->'%(RootDir)%(Directory)$(_ILRepackLanguage)')</_ILRepackLanguageOutputDir>
		</PropertyGroup>

		<ItemGroup>
			<_ILRepackSatelliteForLanguage Remove="@(_ILRepackSatelliteForLanguage)" />
			<_ILRepackSatelliteForLanguage Include="@(_ILRepackAllSatellites)" Condition="'%(_ILRepackAllSatellites.RecursiveDir)' == '$(_ILRepackLanguage)'" />
		</ItemGroup>

		<Exec
			Command="&quot;$(ILRepack)&quot; /out:&quot;$(_ILRepackLanguageOutput)&quot; @(_ILRepackSatelliteForLanguage->'&quot;%(Identity)&quot;', ' ') $(_ILRepackCommonArgs)"
			WorkingDirectory="$(TargetDir)"
			Condition="'$(_ILRepackPerformRepack)' == 'true'" />

		<Copy
			SourceFiles="@(_ILRepackSatelliteForLanguage)"
			DestinationFolder="$(_ILRepackLanguageOutputDir)"
			SkipUnchangedFiles="true"
			Condition="'$(_ILRepackPerformRepack)' != 'true'">
			<Output TaskParameter="CopiedFiles" ItemName="_ILRepackCopiedFiles" />
		</Copy>

		<ItemGroup>
			<_ILRepackCopiedFiles Include="$(_ILRepackLanguageOutput)" />
			<FileWrites Include="@(_ILRepackCopiedFiles)" />
		</ItemGroup>

	</Target>

	<Target
		Name="_ILRepackAssemblies"
		DependsOnTargets="_ILRepackProperties">

		<Exec
			Command="&quot;$(ILRepack)&quot; /out:&quot;@(_ILRepackOutputAssembly->'%(RootDir)%(Directory)%(Filename)%(Extension)')&quot; @(_ILRepackAllAssemblies->'&quot;%(Identity)&quot;', ' ') $(_ILRepackCommonArgs)"
			WorkingDirectory="$(TargetDir)"
			Condition="'$(_ILRepackPerformRepack)' == 'true'" />

		<Copy
			SourceFiles="@(_ILRepackAllAssemblies)"
			DestinationFolder="$(_ILRepackOutputAssemblyDir)"
			SkipUnchangedFiles="true"
			Condition="'$(_ILRepackPerformRepack)' != 'true'">
			<Output TaskParameter="CopiedFiles" ItemName="_ILRepackCopiedFiles" />
		</Copy>

		<Touch Files="$(IntermediateOutputPath)ILRepacker.stamp" AlwaysCreate="True" />
		<ItemGroup>
			<_ILRepackCopiedFiles Include="$(_ILRepackOutputAssembly);@(_ILRepackOutputAssemblyPdb)" />
			<FileWrites Include="$(IntermediateOutputPath)ILRepacker.stamp;@(_ILRepackCopiedFiles)" />
		</ItemGroup>

	</Target>

	<Target
		Name="_ILRepack"
		Inputs="$(MSBuildAllProjects);@(ILRepackPrimaryAssembly);@(ILRepackInputAssemblies)"
		Outputs="$(IntermediateOutputPath)ILRepacker.stamp"
		DependsOnTargets="_ILRepackAssemblies;_ILRepackSatelliteAssemblies" />

	<Target
		Name="ILRepack"
		DependsOnTargets="_ILRepackDependencies;_ILRepack" />

	<Target
		Name="_ILRepackThisAssembly"
		BeforeTargets="CopyFilesToOutputDirectory"
		DependsOnTargets="ILRepack"
		Condition="'$(ILRepackThisAssembly)' == 'True'" />

</Project>